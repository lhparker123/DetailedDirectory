#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug 18 17:52:39 2020

@author: liamparker
"""
from model import model
import os
import PIL
from PIL import Image
import numpy as np

DICTIONARY = dict([
    ('Male', 21),
    ('Attractive', 3),
    ('Black Hair', 9),
    ('Blonde Hair', 10),
    ('Brown Hair', 12),
    ('Chubby', 14),
    ('Pale', 27),
    ('Straight Hair', 33),
    ('Wavy Hair', 34)
    ])

class run_princeton:
    def __init__(self, models, features, princeton_dir, grayscale):
        """
        :param models->object: the model objects generated by the model class
        :param features->list: the list of features to be tested
        :param princeton_dir: the directory in which the princeton faces are stored
        :param grayscale->boolean: determines if whether to grayscale images
        """
        
        self.models    = models
        self.features  = features
        self.pdir      = princeton_dir
        self.gr        = grayscale
    
    def load_files(self):
        for root,dirs,files in os.walk(self.pdir, topdown = True):
            files.sort()
        self.files = files
    
    def create_array(self):
        row_len = len(self.files)
        col_len = 0
        for model in self.models:
            col_len += 1
        array = np.empty((row_len+1, col_len+1))
        
        i = 1
        for feature in self.features:
            feature_no = int(DICTIONARY[feature])
            array[0][i] = feature_no
            i += 1
            
        return array
        
    def run_models(self):
        self.load_files()
        val_array = self.create_array()

        i = 1
        for model in self.models:
            j = 1
            for file in self.files:
                img = Image.open(self.pdir + file)
                img = img.resize((218, 178))
                if self.gr == True:
                    img = img.convert('L')
                prediction = model.predict(img)
                val_array[j][0] = file
                val_array[j][i] = prediction
                j += 1
            i =+ 1     
        
        filename = 'princeton_array'
        np.save(filename, val_array)
            
                
                    
                

            